const ERROR_TYPES = Object.freeze({
  // a we-know-nothing-about-this-error for things we didn't expect. Should only be used
  // in the final catch state of the app.
  GENERIC_ERROR: 'GENERIC_ERROR',
  // an generic error that relates to url, resource or data not found.
  NOT_FOUND: 'NOT_FOUND',

  // general errors
  INVALID_INPUT_DATA: 'INVALID_INPUT_DATA',
  NETWORK_ERROR: 'NETWORK_ERROR',
  UNAUTHENTICATED: 'UNAUTHENTICATED',
  UNAUTHORIZED: 'UNAUTHORIZED',
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',
  MISSING_OR_INVALID_HTTP_HEADER: 'MISSING_OR_INVALID_HTTP_HEADER',

  // business logic related errors
  REQUEST_DATA_NOT_FOUND: 'REQUEST_DATA_NOT_FOUND',
  VALIDATION_FAILURE: 'VALIDATION_FAILURE',
  DATA_STATE_CONFILCT: 'DATA_STATE_CONFILCT',
  TWO_FACTOR_AUTHENTICATION_NOT_ACTIVE: 'TWO_FACTOR_AUTHENTICATION_NOT_ACTIVE',
  INVALID_TWO_FACTOR_AUTHENTICATION_CODE: 'INVALID_TWO_FACTOR_AUTHENTICATION_CODE',
  USER_DATA_CONFLICT: 'USER_DATA_CONFLICT',
});

module.exports = ERROR_TYPES;
